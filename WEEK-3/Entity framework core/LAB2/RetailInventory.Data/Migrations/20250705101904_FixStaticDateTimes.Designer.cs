// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RetailInventory.Data;

#nullable disable

namespace RetailInventory.Data.Migrations
{
    [DbContext(typeof(RetailDbContext))]
    [Migration("20250705101904_FixStaticDateTimes")]
    partial class FixStaticDateTimes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RetailInventory.Domain.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "Electronic devices and gadgets",
                            Name = "Electronics"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "Apparel and accessories",
                            Name = "Clothing"
                        },
                        new
                        {
                            CategoryId = 3,
                            Description = "Books and educational materials",
                            Name = "Books"
                        });
                });

            modelBuilder.Entity("RetailInventory.Domain.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 1, 15, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "High-performance laptop",
                            Name = "Laptop",
                            Price = 999.99m,
                            StockQuantity = 50
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 1, 16, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "Cotton t-shirt",
                            Name = "T-Shirt",
                            Price = 19.99m,
                            StockQuantity = 100
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 1, 17, 9, 45, 0, 0, DateTimeKind.Unspecified),
                            Description = "Learn C# programming",
                            Name = "Programming Book",
                            Price = 49.99m,
                            StockQuantity = 30
                        });
                });

            modelBuilder.Entity("RetailInventory.Domain.Product", b =>
                {
                    b.HasOne("RetailInventory.Domain.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("RetailInventory.Domain.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
